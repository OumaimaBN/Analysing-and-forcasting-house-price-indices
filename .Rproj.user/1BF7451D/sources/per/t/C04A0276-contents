---
title: Analysing and forcasting House Price Indices"
output: html_notebook
---

### Introduction

This case study is on analyzing and forecasting of House Price Indices (HPI). It demonstrates data import from a .CSV file (House-index-canberra, whippet, directory Project â€“ B - 2019), descriptive analysis of HPI time series data, and decomposition and forecasting of the data.

### Exploring the dataset

the dataset used is found in the link below : http://www.rdatamining.com/books/rdm/code

```{r}
# importing the data
houseIndex <- read.csv("./data/House-index-canberra.csv",sep=",",header = FALSE)

# discovering the data
dim(houseIndex)
head(houseIndex)

# add columns names
names(houseIndex) <- c("date", "index")
n <- nrow(houseIndex)

# extract year and month
dates <- as.Date(houseIndex$date, format="%d-%b-%y")
houseIndex$year <- as.numeric(format(dates, "%Y"))
houseIndex$month <- as.numeric(format(dates, "%m"))
```

let's try to plot a chart to see the changes of HPI from 1900 to 2011
```{r}
fromYear <- houseIndex$year[1]
plot(houseIndex$index, pty=1, type="l", lty="solid", xaxt="n", xlab="",
     ylab="Index", main=paste("HPI (Canberra) - Since ", fromYear, sep=""))
# draw tick-marks at 31 Jan of every year
nYear <- ceiling(n/12)
posEveryYear <- 12 * (1:nYear) - 11
axis(1, labels=houseIndex$date[posEveryYear], las=3, at=posEveryYear)
# add horizontal reference lines
abline(h=1:4, col="gray", lty="dotted")
# draw a vertical reference line every five years
posEvery5years <- 12 * (5* 1:ceiling(nYear/5) - 4) - 11
abline(v=posEvery5years, col="gray", lty="dotted")
```
Let's have a look at the increase of HPI every month

```{r}
houseIndex$delta <- houseIndex$index - c(1, houseIndex$index[-n])
plot(houseIndex$delta, main="Increase in HPI", xaxt="n", xlab="")
axis(1, labels=houseIndex$date[posEveryYear], las=3, at=posEveryYear)
# add a reference line
abline(h=0, lty="dotted")
```

To have a clear vision of the percentage of months with a positive increase, we will draw the months with positive increase with a green plus(+) while the negative with red circle 

```{r}

# increase ratio in every month

houseIndex$rate <- houseIndex$index/c(1,houseIndex$index[-n]) - 1
# percentage of months having positive increases in HPI
100 * sum(houseIndex$rate>0)/n
# use ifelse() to set positive values to green and and negative ones to red
plot(houseIndex$rate, xaxt="n", xlab="", ylab="HPI Increase Rate",
     col=ifelse(houseIndex$rate>0,"green","red"),
     pch=ifelse(houseIndex$rate>0,"+","o"))
axis(1, labels=houseIndex$date[posEveryYear], las=3, at=posEveryYear)
abline(h=0, lty="dotted")

```
```{r}
summary(houseIndex$rate)
boxplot(houseIndex$rate, ylab="HPI Increase Rate")
```


### Trend and Seasonal Components of HPI

```{r}

# convert indices to time series with function "ts()"
hpi <- ts(houseIndex$index, start=c(1990,1), frequency=12)
# decomposition of time series by function "stl()"
f <- stl(hpi, "per")
plot(f)

# plot seasonal components
plot(f$time.series[1:12,"seasonal"], type='b', xlab="Month", 
     ylab="Seasonal Components")
```


### HPI Forecasting

```{r}

startYear <- 1990
endYear <- 2010
# to forecast HPIs in the next four years
nYearAhead <- 4


# using Arima model (Autoregressive integrated moving average)
fit <- arima(hpi, order=c(2,0,1), seasonal=list(order=c(2,1,0), period=12))

# prediction
fore <- predict(fit, n.ahead=12*nYearAhead)
# error bounds at 95% confidence level
U <- fore$pred + 2 * fore$se
L <- fore$pred - 2 * fore$se
# plot original and predicted data, as well as error bounds
ts.plot(hpi, fore$pred, U, L, col=c("black", "blue","green","red"), 
        lty=c(1,5,2,2), gpars=list(xaxt="n",xlab=""),
        ylab="Index", main="House Price Trading Index Forecast (Canberra)")
# add labels, reference grid and legend        
years <- startYear:(endYear+nYearAhead+1)
axis(1, labels=paste("Jan ", years, sep=""), las=3, at=years)
grid()
legend("topleft", col=c("black", "blue","green","red"), lty=c(1,5,2,2),
       c("Actual Index", "Forecast", "Upper Bound (95% Confidence)", 
         "Lower Bound (95% Confidence)"))
# ##################################################
ts.plot(fore$pred, U, L, col=c("blue","green","red"), 
        lty=c(5,2,2), gpars=list(xaxt="n",xlab=""),
        ylab="Index", main="House Price Trading Index Forecast (Canberra)")
years <- endYear + (1 : (nYearAhead+1))
axis(1, labels=paste("Jan ", years, sep=""), las=3, at=years)
grid(col = "gray", lty = "dotted")
legend("topleft", col=c("blue","green","red"), lty=c(5,2,2),
       c("Forecast", "Upper Bound (95% Confidence)", 
         "Lower Bound (95% Confidence)"))

```

### The Estimated Price of a Property
```{r}
newHpi <- ts(c(hpi, fore$pred), start=c(1990,1), frequency=12)
(startDate <- start(newHpi))
startYear <- startDate[1]
m <- 9 + (2009-startYear)*12
n <- 9 + (2011-startYear)*12
# percentage of increase
100 * (newHpi[n] / newHpi[m] - 1)
round(535000 * newHpi[n] / newHpi[m])

```
